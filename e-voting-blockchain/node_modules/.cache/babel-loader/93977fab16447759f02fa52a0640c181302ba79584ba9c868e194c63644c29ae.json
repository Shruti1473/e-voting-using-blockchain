{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Victus\\\\Desktop\\\\e-voting-blockchain\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport Web3 from \"web3\";\nimport contractABI from \"./abi/Voting.json\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CONTRACT_ADDRESS = \"0x07a70dc6449e77e22c1ec76baf4d9338c3f54ee2eb7eec69f8e612f8c4f37971\"; // Update this!\n\nfunction App() {\n  _s();\n  const [account, setAccount] = useState(\"\");\n  const [candidates, setCandidates] = useState([]);\n  const [contract, setContract] = useState(null);\n  useEffect(() => {\n    async function init() {\n      if (window.ethereum) {\n        try {\n          const web3 = new Web3(window.ethereum);\n          const accounts = await window.ethereum.request({\n            method: \"eth_requestAccounts\"\n          });\n          setAccount(accounts[0]);\n          const contractInstance = new web3.eth.Contract(contractABI, CONTRACT_ADDRESS);\n          setContract(contractInstance);\n          fetchCandidates(contractInstance);\n        } catch (error) {\n          console.error(\"Error initializing Web3:\", error);\n        }\n      } else {\n        alert(\"MetaMask not detected! Please install it.\");\n      }\n    }\n    init();\n  }, []);\n  async function fetchCandidates(contractInstance) {\n    try {\n      const totalCandidates = await contractInstance.methods.candidatesCount().call();\n      console.log(\"Total Candidates:\", totalCandidates);\n      let candidatesList = [];\n      for (let i = 1; i <= totalCandidates; i++) {\n        const candidate = await contractInstance.methods.getCandidate(i).call();\n        console.log(\"Candidate:\", candidate);\n        candidatesList.push({\n          id: candidate[0],\n          name: candidate[1],\n          voteCount: candidate[2]\n        });\n      }\n      setCandidates(candidatesList);\n    } catch (error) {\n      console.error(\"Error fetching candidates:\", error);\n    }\n  }\n  async function vote(candidateId) {\n    if (!contract || !account) {\n      alert(\"Connect MetaMask first!\");\n      return;\n    }\n    try {\n      await contract.methods.vote(candidateId).send({\n        from: account\n      });\n      fetchCandidates(contract);\n    } catch (error) {\n      console.error(\"Error voting:\", error);\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"E-Voting System\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: [\"Connected Account: \", account || \"Not connected\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this), candidates.length > 0 ? candidates.map(candidate => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [candidate.name, \" - \", candidate.voteCount, \" votes\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => vote(candidate.id),\n        children: \"Vote\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 13\n      }, this)]\n    }, candidate.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 11\n    }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading candidates...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"GrzUuWf9IvqRDzaTLbEKgsf1VPY=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","Web3","contractABI","jsxDEV","_jsxDEV","CONTRACT_ADDRESS","App","_s","account","setAccount","candidates","setCandidates","contract","setContract","init","window","ethereum","web3","accounts","request","method","contractInstance","eth","Contract","fetchCandidates","error","console","alert","totalCandidates","methods","candidatesCount","call","log","candidatesList","i","candidate","getCandidate","push","id","name","voteCount","vote","candidateId","send","from","children","fileName","_jsxFileName","lineNumber","columnNumber","length","map","onClick","_c","$RefreshReg$"],"sources":["C:/Users/Victus/Desktop/e-voting-blockchain/src/App.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport Web3 from \"web3\";\r\nimport contractABI from \"./abi/Voting.json\";\r\n\r\nconst CONTRACT_ADDRESS = \"0x07a70dc6449e77e22c1ec76baf4d9338c3f54ee2eb7eec69f8e612f8c4f37971\"; // Update this!\r\n\r\nfunction App() {\r\n  const [account, setAccount] = useState(\"\");\r\n  const [candidates, setCandidates] = useState([]);\r\n  const [contract, setContract] = useState(null);\r\n\r\n  useEffect(() => {\r\n    async function init() {\r\n      if (window.ethereum) {\r\n        try {\r\n          const web3 = new Web3(window.ethereum);\r\n          const accounts = await window.ethereum.request({ method: \"eth_requestAccounts\" });\r\n          setAccount(accounts[0]);\r\n\r\n          const contractInstance = new web3.eth.Contract(contractABI, CONTRACT_ADDRESS);\r\n          setContract(contractInstance);\r\n          \r\n          fetchCandidates(contractInstance);\r\n        } catch (error) {\r\n          console.error(\"Error initializing Web3:\", error);\r\n        }\r\n      } else {\r\n        alert(\"MetaMask not detected! Please install it.\");\r\n      }\r\n    }\r\n    init();\r\n  }, []);\r\n\r\n  async function fetchCandidates(contractInstance) {\r\n    try {\r\n      const totalCandidates = await contractInstance.methods.candidatesCount().call();\r\n      console.log(\"Total Candidates:\", totalCandidates);\r\n\r\n      let candidatesList = [];\r\n      for (let i = 1; i <= totalCandidates; i++) {\r\n        const candidate = await contractInstance.methods.getCandidate(i).call();\r\n        console.log(\"Candidate:\", candidate);\r\n\r\n        candidatesList.push({\r\n          id: candidate[0], \r\n          name: candidate[1], \r\n          voteCount: candidate[2]\r\n        });\r\n      }\r\n\r\n      setCandidates(candidatesList);\r\n    } catch (error) {\r\n      console.error(\"Error fetching candidates:\", error);\r\n    }\r\n  }\r\n\r\n  async function vote(candidateId) {\r\n    if (!contract || !account) {\r\n      alert(\"Connect MetaMask first!\");\r\n      return;\r\n    }\r\n\r\n    try {\r\n      await contract.methods.vote(candidateId).send({ from: account });\r\n      fetchCandidates(contract);\r\n    } catch (error) {\r\n      console.error(\"Error voting:\", error);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <h1>E-Voting System</h1>\r\n      <h3>Connected Account: {account || \"Not connected\"}</h3>\r\n\r\n      {candidates.length > 0 ? (\r\n        candidates.map((candidate) => (\r\n          <div key={candidate.id}>\r\n            <p>{candidate.name} - {candidate.voteCount} votes</p>\r\n            <button onClick={() => vote(candidate.id)}>Vote</button>\r\n          </div>\r\n        ))\r\n      ) : (\r\n        <p>Loading candidates...</p>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}